# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  resumes_directory: '%kernel.project_dir%/public/uploads/resumes'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Tests,Kernel.php}'

  App\Infrastructure\EventDispatcher\EventDispatcherAdapter:
    arguments:
      $dispatcher: '@event_dispatcher'
    tags: [ 'event_dispatcher' ]

  App\Contracts\Service\CompanyServiceInterface:
    alias: App\Application\Service\CompanyService

  App\Contracts\Service\ResumeServiceInterface:
    alias: App\Application\Service\ResumeService

  App\Contracts\Service\ReactionServiceInterface:
    alias: App\Application\Service\ReactionService

  App\Application\Service\FileService:
    arguments:
      $targetDirectory: '%resumes_directory%'

  App\Application\EventHandler\CompanyCreatedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'company.created', method: 'onCompanyCreated' }

  App\Application\EventHandler\CompanyUpdatedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'company.updated', method: 'onCompanyUpdated' }

  App\Application\EventHandler\CompanyDeletedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'company.deleted', method: 'onCompanyDeleted' }

  App\Application\EventHandler\ResumeCreatedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'resume.created', method: 'onResumeCreated' }

  App\Application\EventHandler\ResumeUpdatedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'resume.updated', method: 'onResumeUpdated' }

  App\Application\EventHandler\ResumeDeletedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'resume.deleted', method: 'onResumeDeleted' }

  App\Application\EventHandler\ReactionCreatedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'reaction.created', method: 'onReactionCreated' }

  App\Application\EventHandler\ReactionUpdatedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'reaction.updated', method: 'onReactionUpdated' }

  App\Application\EventHandler\ReactionDeletedHandler:
    tags:
      - { name: 'kernel.event_listener', event: 'reaction.deleted', method: 'onReactionDeleted' }